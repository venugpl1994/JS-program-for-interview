function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
var crockford=new person('Semicolans!!!lone1')
crockford.talk()
-----------------------------------------------
what does new does?
1.create new object
2.set the prototype
3.execute constructor with 'this'
4.return the created object(sometimes)
-------------------------------------------------
--------------------------------------------------------
1.create new object
function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
function new(){
var obj={}
}
var crockford=new(person('Semicolans!!!lone1'))
crockford.talk()
-------------------------------------------------------
2.set the prototype
function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
function new(constructor){
var obj={}
Object.setPrototypeOf(obj,constructor.prototype)
}
var crockford=new(person,'Semicolans!!!lone1')
crockford.talk()
------------------------------------------------------------
3.execute constructor with this
This program is working fine.
function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
function spwan(constructor){
var obj={}
Object.setPrototypeOf(obj,constructor.prototype)
var argsArray=Array.from(arguments)
console.log(argsArray.slice(1))
}
var crockford=spwan(person,'Semicolans!!!lone1')
--------------------------------------------------------
function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
function spwan(constructor){
var obj={}
Object.setPrototypeOf(obj,constructor.prototype)
var argsArray=Array.Prototype.slice.apply(arguments)
constructor.apply(obj,argsArray.slice(1))
return obj
}
var crockford=spawn(person,'Semicolans!!!lone1')
crockford.talk()
----------------------------------------------------------
4.return the created object(sometimes)
function person(){
	this.saying=saying
}
person.prototype.talk=function(){
	console.log('I say:', this.saying)
}
function spawn(constructor){
	var obj={}
	Object.setPrototypeOf(obj,constructor.prototype)
	var argsArray=Array.prototype.slice.apply(arguments)
	return constructor.apply(obj,argsArray.slice(1)||obj)
}
var crockford=spawn(person,'Semicolans!!!lone1'))
crockford.talk()


