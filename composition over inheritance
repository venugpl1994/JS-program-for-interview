----------------------------------------------------------------
there are 3 methods.Why composition is good over Inheritance
----------------------------------------------------------------
ES6 classes 
------------------------------------------------------------------
class Person{
  constructor(fn, ln){
    this.firstName = fn;
    this.lastName = ln;
  }
 
  getInfo(){
    //In real life this method/function will be bigger
     return 'Hi i am ' + this.firstName + '' + this.lastName;
   }
}

class Employee extends Person {
  constructor(fn, ln, eid){
    super(fn,ln);
    this.empid = eid;
  }
 
  getId(){
    return 'Hi my employee id is ' + this.empid;
  }
}

const e1 = new Employee('john', 'doe', 123);

console.log( e1.getInfo() );// Hi i am john doe
console.log( e1.getId() ); // Hi my employee id is 123
-------------------------------------------------------------------
Es5 prototypal class
----------------------------------------------------------------
function Person(fn, ln){
  this.firstName = fn;
  this.lastName = ln;
}
 
Person.prototype.getInfo = function(){
  return 'Hi i am ' + this.firstName + '' + this.lastName;
}
 
function Employee(fn, ln, empid){
  Person.call(this, fn, ln);
  this.empid = empid;
}
 
Employee.prototype = Object.create(Person.prototype);
 
Employee.prototype.getId = function(){
  return 'Hi my employee id is' + this.empid;
}

var e1 = new Employee('john', 'doe', 123);

console.log( e1.getInfo());
console.log( e1.getId());
----------------------------------------------------------------------------------------------------
composition------------------This is best example where composition is preffered over inheritance
-------------------------------------------------------------------------------------------------------
function getInfo(firstName, lastName){
  return 'hi i am venu' + firstName + '' + lastName;
}
 
function createPerson(fn, ln){
  return {
    getInfo: function(){ return getInfo(fn, ln)} 
  };
}
 
//In real life this method/function will be bigger
//So taking this function out of createPerson will make sense then

function getId(empid){
  return 'Hi my employee id is ' + empid;
}
 
//createEmployee makes use of composition. Itsâ€™ simple. Any function //which makes use of other functions to compose functionality is //said to be making use of composition. We all use it many times.

function createEmployee(fn, ln, empid){
  return {
    getId : function(){ return getId(empid);},
    getInfo: function(){ return getInfo(fn, ln);} 
  };
}

var e2 = createEmployee('john', 'doe', 123);

console.log( e2.getInfo());
console.log( e2.getId());
---------------------------------------------------------------------------------------------------------
