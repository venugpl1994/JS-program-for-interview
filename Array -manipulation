How to remove duplicate array elements
let a=[1,2,5,2,1,8];
let b=[];
let len=a.length;
for(let i=0;i<len;i++){
	if(b.indexOf(a[i])==-1){
		b.push(a[i]);
	}
	
}
console.log(b);
--------------------------------------------
let a=[1,2,5,2,1,8]
obj={};
for(let i of a){
	obj[i]=true;
}
let b=Object.keys(obj);
console.log(b);
------------------------------------------------
Set return unique values from array
let a=[1,2,5,2,1,8];
let bSet= new Set(a);
console.log(bSet);
------------------------------------------------
console.log([...new Set(a)]);//Use 25 instead of 22 and 23 to get answer
-----------------------------------------------------------------
Write a program for missing number in usorted array excluding 1
function abc(bcd){
let sum=0;
let n=bcd.length+1;
let r=n*(n+1)/2
for(let i=0; i<=bcd.length-1;i++){
	sum+=bcd[i];
}
return r-sum;
}
console.log(abc([1,3,4,5,6,2,8]));
-----------------------------------------------------------------------
Write a program for finding pair of two number in unsorted array equal to a given sum
function sumFinder(arr, sum){
  var len = arr.length;
  
  for(var i =0; i<len-1; i++){  
     for(var j = i+1;j<len; j++){
        if (arr[i] + arr[j] == sum)
            return true;
     }
  }
  
  return false;
}

console.log(sumFinder([6,4,3,2,1,7], 9));
console.log(sumFinder([6,4,3,2,1,7], 2));
----------------------------------------------------------------------------------------
Write a program to find substring matching string or not
var string="abcffffggghhhhhhkkkk"
var substring="ffggg"
console.log(string.indexOf(substring));
----------------------------------------------------------------------------------------
var string="abcffffggghhhhhhkkkk"
var substring="ffggg"
console.log(string.includes(substring));
-----------------------------------------------------------------------------------------
function subStringFinder(str, subStr){
  var idx = 0,
      i = 0,
      j = 0,
      len = str.length,
      subLen = subStr.length;

   for(i=0; i<len; i++){
   
      if(str[i] == subStr[j])
         j++;
      else
         j = 0; 
      if(j == 0)
        idx = i;
      else if (j == subLen)
        return idx;
  }

  return -1;
}
console.log(subStringFinder('abbcdabbbbbck', 'ab'));
console.log(subStringFinder('abbcdabbbbbck', 'bck'));
--------------------------------------------------------------------------------------------------
program to find letter count or find frequency of word in letters
	function getFrequency(string) {
    var freq = {};
    for (var i=0; i<string.length;i++) {
        var character = string.charAt(i);
        if (freq[character]) {
           freq[character]++;
        } else {
           freq[character] = 1;
        }
    }

    return freq;
}
console.log(getFrequency("maadamcv"));
---------------------------------------------------------------------------------------------------------------
program to make first letter of each word in uppercase
function titleCase(str) {
     words = str.toLowerCase().split(' ');

     for(var i = 0; i < words.length; i++) {
          var letters = words[i].split('');
          letters[0] = letters[0].toUpperCase();
          words[i] = letters.join('');
     }
     return words.join(' ');
}
console.log(titleCase("I'm a little tea Pot"));
---------------------------------------------------------------------------------------------------------------
Taken from freecodecamp
function titleCase(str) {
  str = str.toLowerCase().split(' ');
  for (var i = 0; i < str.length; i++) {
    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
  }
  return str.join(' ');
}
console.log(titleCase("I'm a little tea pot"));
-----------------------------------------------------------------------------------------------------------------
Taken from freecodecamp
function titleCase(str) {
  return str.toLowerCase().split(' ').map(function(word) {
    return (word.charAt(0).toUpperCase() + word.slice(1));
  }).join(' ');
}
console.log(titleCase("I'm a little tea pot"));
----------------------------------------------------------------------------------
Program to find longest word in a string
function findLongestWord(str) {
  var strSplit = str.split(' ');
  var longestWord = 0;
  for(var i = 0; i < strSplit.length; i++){
    if(strSplit[i].length > longestWord){
	longestWord = strSplit[i].length;
     }
  }
  return longestWord;
}
console.log(findLongestWord("The quick brown fox jumped over the lazy dog"));
------------------------------------------------------------------------------------------------
function findLongestWord(str) {
  var longestWord = str.split(' ').reduce(function(longest, currentWord) {
    return currentWord.length > longest.length ? currentWord : longest;
  }, "");
  return longestWord.length;
}
console.log(findLongestWord("The quick brown fox jumped over the lazy dog"));
-------------------------------------------------------------------------------------------------------
how to reverse sentence on its position
function reverseSent(sentence){
  var result = " ";
  var splitStr = sentence.split(" ");

  for (var i = splitStr.length - 1; i >= 0; i--){
    result += splitStr[i] + " ";
    var words = result;
  }
  return words;
}
console.log(reverseSent("I am venu gopal"));
-----------------------------------------------------------------------------------------------------
function reverseWords(str){
 var rev = [], 
     wordLen = 0;
 for(var i = str.length-1; i>=0; i--){
   if(str[i]==' ' || i==0){
     rev.push(str.substr(i,wordLen+1));
     wordLen = 0;
   }
   else
     wordLen++;
 }
 return rev.join(' ');
}
console.log(reverseWords("i am vg sir"));
------------------------------------------------------------------------------------------------------
Program to find permutation of a given string
function permut(string) {
    if (string.length < 2) return string; // This is our break condition

    var permutations = []; // This array will hold our permutations

    for (var i=0; i<string.length; i++) {
        var char = string[i];

        // Cause we don't want any duplicates:
        if (string.indexOf(char) != i) // if char was used already
            continue;           // skip it this time

        var remainingString = string.slice(0,i) + string.slice(i+1,string.length); //Note: you can concat Strings via '+' in JS

        for (var subPermutation of permut(remainingString))
            permutations.push(char + subPermutation)

    }
    return permutations;
}
var myString = "xyz";
permutations = permut(myString);
for (permutation of permutations)
    console.log((permutation));
-----------------------------------------------------------------------------------------------------------------------

